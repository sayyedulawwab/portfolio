---
import { getCollection, type CollectionEntry } from 'astro:content';
import BaseLayout from '../layouts/BaseLayout.astro';
const allPosts = (await getCollection('blog')).sort(
  (a: CollectionEntry<'blog'>, b: CollectionEntry<'blog'>) =>
    new Date(b.data.publishedOn + 'T00:00:00').getTime() -
    new Date(a.data.publishedOn + 'T00:00:00').getTime()
);
// .filter(
//   (post: CollectionEntry<'blog'>) =>
//     new Date(post.data.publishedOn + 'T00:00:00').getTime() <=
//     new Date().getTime()
// );
function formatDate(date: string): string {
  const options: Intl.DateTimeFormatOptions = {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  };

  return new Date(date).toLocaleDateString(undefined, options);
}
const title = 'sayyedulawwab | Blog';
const author = 'Muhammad Sayyedul Awwab';
const description = 'Recent Articles';
const pageUrl = '/blog';
---

<BaseLayout
  title={title}
  author={author}
  description={description}
  pageUrl={pageUrl}
>
  <main class="w-4/5 mx-auto text-lg">
    <h1 class="text-3xl font-bold mb-6">Recent Articles</h1>
    <div class="grid grid-cols-1 gap-6">
      {
        allPosts.map(post => (
          <a href={`/blog/${post.slug}/`} class="text-gray-800">
            <div class="bg-white p-6 rounded-lg shadow-lg hover:shadow-xl transition-shadow">
              <h2 class="text-2xl font-semibold text-gray-800 mb-4">
                {post.data.title}
              </h2>
              <p class="text-gray-600 text-sm">
                {formatDate(post.data.publishedOn)}
              </p>
            </div>
          </a>
        ))
      }
    </div>
  </main>
</BaseLayout>
